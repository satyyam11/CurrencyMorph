package com.example.demo1;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.DecimalFormat;
import org.json.JSONObject;

public class HelloApplication extends Application {

    private static final String API_KEY = "0653e8e55e96504db27b86d6";
    private static final String BASE_URL = "https://v6.exchangerate-api.com/v6/" + API_KEY + "/latest/";

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Currency Converter");

        // Create labels, text field, combo boxes, and button
        Label amountLabel = new Label("Amount:");
        TextField amountField = new TextField();
        Label fromLabel = new Label("From:");
        ComboBox<String> fromCurrencyBox = new ComboBox<>();
        fromCurrencyBox.getItems().addAll("USD", "EUR", "GBP", "JPY", "AUD", "INR");
        fromCurrencyBox.setValue("USD");

        Label toLabel = new Label("To:");
        ComboBox<String> toCurrencyBox = new ComboBox<>();
        toCurrencyBox.getItems().addAll("USD", "EUR", "GBP", "JPY", "AUD", "INR");
        toCurrencyBox.setValue("EUR");

        Button convertButton = new Button("Convert");
        Label resultLabel = new Label("Converted Amount:");

        // Set action for the convert button
        convertButton.setOnAction(e -> {
            try {
                double amount = Double.parseDouble(amountField.getText());
                String fromCurrency = fromCurrencyBox.getValue();
                String toCurrency = toCurrencyBox.getValue();
                double convertedAmount = convertCurrency(amount, fromCurrency, toCurrency);
                DecimalFormat df = new DecimalFormat("#.##");
                resultLabel.setText("Converted Amount: " + df.format(convertedAmount) + " " + toCurrency);
            } catch (Exception ex) {
                resultLabel.setText("Error: " + ex.getMessage());
            }
        });

        // Layout using GridPane
        GridPane grid = new GridPane();
        grid.setVgap(10);
        grid.setHgap(10);
        grid.setAlignment(Pos.CENTER);

        grid.add(amountLabel, 0, 0);
        grid.add(amountField, 1, 0);
        grid.add(fromLabel, 0, 1);
        grid.add(fromCurrencyBox, 1, 1);
        grid.add(toLabel, 0, 2);
        grid.add(toCurrencyBox, 1, 2);
        grid.add(convertButton, 0, 3);
        grid.add(resultLabel, 1, 3);

        // Create the scene and add the grid to it
        Scene scene = new Scene(grid, 400, 300);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    // Method to convert currency using API
    private double convertCurrency(double amount, String fromCurrency, String toCurrency) throws Exception {
        String urlString = BASE_URL + fromCurrency;
        URL url = new URL(urlString);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.connect();

        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        StringBuilder response = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) {
            response.append(line);
        }

        JSONObject jsonResponse = new JSONObject(response.toString());
        double exchangeRate = jsonResponse.getJSONObject("conversion_rates").getDouble(toCurrency);
        return amount * exchangeRate;
    }
}
